name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Setup Docker
        run: docker --version && docker-compose --version  # Verify installations

      - name: Build Backend Image
        run: docker-compose build backend

  push-to-dockerhub:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Backend Image
        run: |
          docker-compose build backend
          docker push girdhar005/cyderes-backend:latest

      - name: Push Frontend Image
        run: |
          docker-compose build frontend
          docker push girdhar005/cyderes-frontend:latest

  deploy:
    needs: push-to-dockerhub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to Server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
          cd /app &&
          git pull origin main &&
          
          # Create .env file for Docker Compose
          echo 'SERVER_IP=${{ secrets.SERVER_IP }}' > .env
          echo 'IPINFO_API_KEY=${{ secrets.IPINFO_API_KEY }}' >> .env
          echo 'VITE_API_URL=${{ vars.VITE_API_URL }}' >> .env

          # Restart Docker Compose with updated env
          docker-compose down
          docker-compose up -d
          "
